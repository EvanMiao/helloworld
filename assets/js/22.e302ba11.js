(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{455:function(s,t,a){"use strict";a.r(t);var e=a(9),v=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"创建正则表达式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建正则表达式"}},[s._v("#")]),s._v(" 创建正则表达式")]),s._v(" "),a("ul",[a("li",[s._v("使用一个正则表达式字面量")])]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" reg "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[s._v("/xxx/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("ul",[a("li",[s._v("调用 "),a("code",[s._v("RegExp")]),s._v(" 对象的构造函数")])]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" reg "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RegExp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'xxx'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("两种方法主要区别是：第一种方法在引擎编译代码时，就会新建正则表达式，第二种方法在运行时新建正则表达式，所以前者的效率较高。而且，前者比较便利和直观，所以实际应用中，基本上都采用字面量定义正则表达式。")]),s._v(" "),a("h3",{attrs:{id:"实例属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实例属性"}},[s._v("#")]),s._v(" 实例属性")]),s._v(" "),a("p",[s._v("分为两类")]),s._v(" "),a("ul",[a("li",[s._v("修饰符（只读）")])]),s._v(" "),a("p",[a("code",[s._v("RegExp.prototype.ignoreCase")]),s._v("：返回一个布尔值，表示是否设置了 "),a("code",[s._v("i")]),s._v(" 修饰符。用于忽略字符串大小写。")]),s._v(" "),a("p",[a("code",[s._v("RegExp.prototype.global")]),s._v("：返回一个布尔值，表示是否设置了 "),a("code",[s._v("g")]),s._v(" 修饰符。用于全局匹配。")]),s._v(" "),a("p",[a("code",[s._v("RegExp.prototype.multiline")]),s._v("：返回一个布尔值，表示是否设置了 "),a("code",[s._v("m")]),s._v(" 修饰符。用于设置匹配为多行模式。")]),s._v(" "),a("ul",[a("li",[s._v("其他属性")])]),s._v(" "),a("p",[a("code",[s._v("RegExp.prototype.lastIndex")]),s._v("：返回一个数值，表示下一次开始搜索的位置。该属性可读写，但是只在进行连续搜索时有意义，详细介绍请看后文。")]),s._v(" "),a("p",[a("code",[s._v("RegExp.prototype.source")]),s._v("：返回正则表达式的字符串形式（不包括反斜杠），该属性只读。")]),s._v(" "),a("h3",{attrs:{id:"实例方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实例方法"}},[s._v("#")]),s._v(" 实例方法")]),s._v(" "),a("ul",[a("li",[a("strong",[s._v("RegExp.prototype.test()")])])]),s._v(" "),a("p",[a("code",[s._v("test")]),s._v(" 方法返回布尔值，表示当前模式是否能匹配参数字符串")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token regex"}},[s._v("/a/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'and'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// true")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("ul",[a("li",[a("strong",[s._v("RegExp.prototype.exec()")])])]),s._v(" "),a("p",[a("code",[s._v("exec")]),s._v(" 方法，用来返回匹配结果")]),s._v(" "),a("p",[s._v("如果发现匹配，就返回一个数组，成员是匹配成功的子字符串，否则返回 "),a("code",[s._v("null")])]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token regex"}},[s._v("/a/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("exec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'adbca'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("如果正则表示式包含圆括号（即含有“组匹配”），则返回的数组会包括多个成员。第一个成员是整个匹配成功的结果，后面的成员就是圆括号对应的匹配成功的组。也就是说，第二个成员对应第一个括号，第三个成员对应第二个括号，以此类推。整个数组的 "),a("code",[s._v("length")]),s._v(" 属性等于组匹配的数量再加 1 。")]),s._v(" "),a("p",[a("code",[s._v("String.prototype.match()")]),s._v("：返回一个数组，成员是所有匹配的子字符串。")]),s._v(" "),a("p",[a("code",[s._v("String.prototype.search()")]),s._v("：按照给定的正则表达式进行搜索，返回一个整数，表示匹配开始的位置。")]),s._v(" "),a("p",[a("code",[s._v("String.prototype.replace()")]),s._v("：按照给定的正则表达式进行替换，返回替换后的字符串。")]),s._v(" "),a("p",[a("code",[s._v("String.prototype.split()")]),s._v("：按照给定规则进行字符串分割，返回一个数组，包含分割后的各个成员。")]),s._v(" "),a("hr"),s._v(" "),a("h2",{attrs:{id:"元字符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#元字符"}},[s._v("#")]),s._v(" 元字符")]),s._v(" "),a("h3",{attrs:{id:"点字符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#点字符"}},[s._v("#")]),s._v(" 点字符")]),s._v(" "),a("p",[s._v("点字符 "),a("code",[s._v(".")]),s._v(" 匹配除回车（"),a("code",[s._v("\\r")]),s._v("）、换行（"),a("code",[s._v("\\n")]),s._v("） 、行分隔符（"),a("code",[s._v("\\u2028")]),s._v("）和段分隔符（"),a("code",[s._v("\\u2029")]),s._v("）以外的所有字符。")]),s._v(" "),a("h3",{attrs:{id:"位置字符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#位置字符"}},[s._v("#")]),s._v(" 位置字符")]),s._v(" "),a("p",[a("code",[s._v("^")]),s._v(" 表示字符串的开始位置")]),s._v(" "),a("p",[a("code",[s._v("$")]),s._v(" 表示字符串的结束位置")]),s._v(" "),a("h3",{attrs:{id:"选择符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#选择符"}},[s._v("#")]),s._v(" 选择符")]),s._v(" "),a("p",[a("code",[s._v("|")]),s._v(" 表示“或关系”")]),s._v(" "),a("h3",{attrs:{id:"转义符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#转义符"}},[s._v("#")]),s._v(" 转义符")]),s._v(" "),a("p",[s._v("匹配元字符本身可以在它们前面加反斜杠 "),a("code",[s._v("\\")])]),s._v(" "),a("p",[s._v("构造函数需要两次转义")]),s._v(" "),a("h3",{attrs:{id:"特殊字符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#特殊字符"}},[s._v("#")]),s._v(" 特殊字符")]),s._v(" "),a("p",[a("code",[s._v("\\cX")]),s._v(" 表示 Ctrl-[X]，其中的 X 是 A-Z 之中任一个英文字母，用来匹配控制字符。")]),s._v(" "),a("p",[a("code",[s._v("[\\b]")]),s._v(" 匹配退格键(U+0008)，不要与 "),a("code",[s._v("\\b")]),s._v(" 混淆。")]),s._v(" "),a("p",[a("code",[s._v("\\n")]),s._v(" 匹配换行键。")]),s._v(" "),a("p",[a("code",[s._v("\\r")]),s._v(" 匹配回车键。")]),s._v(" "),a("p",[a("code",[s._v("\\t")]),s._v(" 匹配制表符 tab（U+0009）。")]),s._v(" "),a("p",[a("code",[s._v("\\v")]),s._v(" 匹配垂直制表符（U+000B）。")]),s._v(" "),a("p",[a("code",[s._v("\\f")]),s._v(" 匹配换页符（U+000C）。")]),s._v(" "),a("p",[a("code",[s._v("\\0")]),s._v(" 匹配 "),a("code",[s._v("null")]),s._v(" 字符（U+0000）。")]),s._v(" "),a("p",[a("code",[s._v("\\xhh")]),s._v(" 匹配一个以两位十六进制数（\\x00-\\xFF）表示的字符。")]),s._v(" "),a("p",[a("code",[s._v("\\uhhhh")]),s._v(" 匹配一个以四位十六进制数（\\u0000-\\uFFFF）表示的 Unicode 字符。")]),s._v(" "),a("h2",{attrs:{id:"字符类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符类"}},[s._v("#")]),s._v(" 字符类")]),s._v(" "),a("p",[s._v("字符类（class）表示有一系列字符可供选择，只要匹配其中一个就可以了。所有可供选择的字符都放在方括号内，比如 "),a("code",[s._v("[^xyz]")]),s._v(" 表示 x、y、z 之中任选一个匹配。")]),s._v(" "),a("h3",{attrs:{id:"脱字符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#脱字符"}},[s._v("#")]),s._v(" 脱字符")]),s._v(" "),a("p",[s._v("（"),a("code",[s._v("^")]),s._v("）：需在字符类第一位")]),s._v(" "),a("p",[s._v("表示除了字符类之中的字符，其他字符都可以匹配。只有 "),a("code",[s._v("[^]")]),s._v(" ，就表示匹配一切字符，包括换行符。相比之下，点号 "),a("code",[s._v(".")]),s._v(" 作为元字符是不包括换行符的。")]),s._v(" "),a("h3",{attrs:{id:"连字符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#连字符"}},[s._v("#")]),s._v(" 连字符")]),s._v(" "),a("p",[s._v("（"),a("code",[s._v("-")]),s._v("）")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token regex"}},[s._v("/[0-9.,]/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token regex"}},[s._v("/[0-9a-fA-F]/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token regex"}},[s._v("/[a-zA-Z0-9-]/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token regex"}},[s._v("/[1-31]/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 不代表1到31，只代表1到3")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h2",{attrs:{id:"预定义模式：某些常见模式的简写方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#预定义模式：某些常见模式的简写方式"}},[s._v("#")]),s._v(" 预定义模式：某些常见模式的简写方式")]),s._v(" "),a("p",[a("code",[s._v("\\d")]),s._v(" 匹配0-9之间的任一数字，相当于 "),a("code",[s._v("[0-9]")]),s._v(" 。")]),s._v(" "),a("p",[a("code",[s._v("\\D")]),s._v(" 匹配所有0-9以外的字符，相当于 "),a("code",[s._v("[^0-9]")]),s._v(" 。")]),s._v(" "),a("p",[a("code",[s._v("\\w")]),s._v(" 匹配任意的字母、数字和下划线，相当于 "),a("code",[s._v("[A-Za-z0-9_]")]),s._v(" 。")]),s._v(" "),a("p",[a("code",[s._v("\\W")]),s._v(" 除所有字母、数字和下划线以外的字符，相当于 "),a("code",[s._v("[^A-Za-z0-9_]")]),s._v(" 。")]),s._v(" "),a("p",[a("code",[s._v("\\s")]),s._v(" 匹配空格（包括换行符、制表符、空格符等），相等于 "),a("code",[s._v("[ \\t\\r\\n\\v\\f]")]),s._v(" 。")]),s._v(" "),a("p",[a("code",[s._v("\\S")]),s._v(" 匹配非空格的字符，相当于 "),a("code",[s._v("[^ \\t\\r\\n\\v\\f]")]),s._v(" 。")]),s._v(" "),a("p",[a("code",[s._v("\\b")]),s._v(" 匹配词的边界。")]),s._v(" "),a("p",[a("code",[s._v("\\B")]),s._v(" 匹配非词边界，即在词的内部。")]),s._v(" "),a("h2",{attrs:{id:"重复类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#重复类"}},[s._v("#")]),s._v(" 重复类")]),s._v(" "),a("p",[s._v("模式的精确匹配次数，使用大括号 "),a("code",[s._v("{}")]),s._v(" 表示。")]),s._v(" "),a("p",[a("code",[s._v("{n}")]),s._v(" 表示恰好重复 n 次；")]),s._v(" "),a("p",[a("code",[s._v("{n,}")]),s._v(" 表示至少重复 n 次；")]),s._v(" "),a("p",[a("code",[s._v("{n,m}")]),s._v(" 表示重复不少于 n 次，不多于 m 次。")]),s._v(" "),a("h2",{attrs:{id:"量词符：设定某个模式出现的次数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#量词符：设定某个模式出现的次数"}},[s._v("#")]),s._v(" 量词符：设定某个模式出现的次数")]),s._v(" "),a("p",[a("code",[s._v("?")]),s._v(" 问号表示某个模式出现0次或1次，等同于 "),a("code",[s._v("{0, 1}")]),s._v(" 。")]),s._v(" "),a("p",[a("code",[s._v("*")]),s._v(" 星号表示某个模式出现0次或多次，等同于 "),a("code",[s._v("{0,}")]),s._v(" 。")]),s._v(" "),a("p",[a("code",[s._v("+")]),s._v(" 加号表示某个模式出现1次或多次，等同于 "),a("code",[s._v("{1,}")]),s._v(" 。")]),s._v(" "),a("h2",{attrs:{id:"贪婪模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#贪婪模式"}},[s._v("#")]),s._v(" 贪婪模式")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" s "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'aaa'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\ns"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[s._v("/a+/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// ["aaa"]')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("贪婪模式改为非贪婪模式\n"),a("code",[s._v("*?")]),s._v("：表示某个模式出现 0 次或多次，匹配时采用非贪婪模式。")]),s._v(" "),a("p",[a("code",[s._v("+?")]),s._v("：表示某个模式出现 1 次或多次，匹配时采用非贪婪模式。")]),s._v(" "),a("h2",{attrs:{id:"字符串去空格-replace"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符串去空格-replace"}},[s._v("#")]),s._v(" 字符串去空格(replace)")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'  #id div.class  '")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nstr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("trim")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "#id div.class"')]),s._v("\nstr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[s._v("/^\\s+|\\s+$/g")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "#id div.class"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[a("code",[s._v("$&")]),s._v("：匹配的子字符串。")]),s._v(" "),a("p",[s._v("$`：匹配结果前面的文本。")]),s._v(" "),a("p",[a("code",[s._v("$’")]),s._v("：匹配结果后面的文本。")]),s._v(" "),a("p",[a("code",[s._v("$n")]),s._v("：匹配成功的第 n 组内容， n 是从 1 开始的自然数。")]),s._v(" "),a("p",[a("code",[s._v("$$")]),s._v("：指代美元符号 $ 。")])])}),[],!1,null,null,null);t.default=v.exports}}]);